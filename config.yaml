## Your EDR API key
edr_api_key: <EDR_API_KEY>

## Your Intezer Analyze API key
intezer_api_key: <INTEZER_API_KEY>

## Your EDR Type
## options: S1
type: <EDR_TYPE>


# Your EDR base address.
base_address: <EDR_BASE_ADDRESS>


## ssl verification for edr requests
## options: true, false
## default: false.
#ssl_verification: <SSL_VERIFICATION>


## The Connector fetches the all alerts that were created in the last <latest_edr_alerts_limit_in_hours> hours
## The app recognizes which alerts were already handled and will not reanalyze them
## This mainly influences 2 scenarios:
## 1. When running this app for the first time, how far back to you want to analyze your alerts
## 2. How long should we retry In case the analysis failed for some reason
##   (the endpoint machine is down and we couldn't fetch the file, timeout during fetching file etc)     
## default: 72 (hours)
#latest_edr_alerts_limit_in_hours: <LATEST_EDR_ALERTS_LIMIT_IN_HOURS>


## In order to lower quota consumption, The connector will try to use your privous analyses, if they exist
## This configuration influences how long does your analyses remain valid before creating a new analysis
## Lower this to get the most up to date analyses
## Raise this to lower quota consumption even more (we would not advise rasing above 30)
## options: 0-90 (days)
## default: 30 (days)
#latest_analysis_limit_in_days: <LATEST-ANALYSIS-LIMIT_IN_DAYS>

## The cooldown between each iteration of the app
## After fetching and anlalyzing your analyses, the app goes to sleep befor starting over
## Raise this is order to lower the number for requests to your EDR
## lower this for faster notes and less 'dead time'
## options: 0-âˆž (minutes)
## default: 15 (minutes)
#cooldown_in_minutes: <COOLDOWN_BETWEEN_RUNS_IN_MINUTES


## HTTP timeout for requests to EDR
## default: 60 (seconds)
#http_timeout_in_seconds: <HTTP_TIMEOUT_IN_SECONDS>


## Number of retries for downloading file from endpoint
## default: 3
#download_retries: <FILE_DOWNLOAD_NUM_OF_RETRIES>


## Download requests timeout
## default: 10 (seconds)
#download_timeout_in_seconds: <FILE_DOWNLOAD_TIMOUT_IN_SECONDS>

